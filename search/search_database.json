var tipuesearch = {"pages":[{"title":" SEP-Stochastic ","text":"SEP-Stochastic SEP-stochastic Fortran numerical integrator for SEP stochastic model Setting up virtual env To set up virtual env $ module load python / 3.9 . 0 $ python - m pip install virtualenv $ # if venv-python doesn't already exist $ python - m virtualenv venv - python $ source venv - python / bin / activate Compiling To compile, run make all , or just make . If there are some dependency errors,\nyou can use make modules to compile the modules first before redoing make all .\nIf errors still persist, use make clean to start from scratch. Current\nversions of Fortran compilers don't support automatic dependency generation, so\nsome dependencies, like for mtrx.o and dxx.o have to be defined manually. To compile using GFortran/GCC, set the environment variable $toolset to gcc .\nBy default the Makefile will assme a PGI toolset is being used. $ export toolset = gcc\n$ make clean\n$ make modules\n$ make all Running INVALID. Does not work for the python script. First, run export SHTC_URL=<url from GONG here> to set the environment\nvariable to the URL, the URL from which the spherical harmonic transform\ncoefficients will be downloaded. Then, run ./master-runner.sh and sit back and\nwait for it to email you. That is, $ export SHTC_URL = https://gong.nso.edu/data/magmap/QR/bqc/202004/mrbqc200421/mrbqc200421t0054c2230_348.dat\n$ ./master-runner.sh This can also be combined into one line by setting the variable in the same line\nright before the script invocation, like so: $ SHTC_URL = https://gong.nso.edu/data/magmap/QR/bqc/202004/mrbqc200421/mrbqc200421t0054c2230_348.dat ./master-runner.sh where a SHTC file from 2020 April is used as an example. If you are Florida Tech faculty/staff, you will want to change the line\ncontaining the variable $MAIL_ADDRESS from MAIL_ADDRESS = \"$USER@my.fit.edu\" to MAIL_ADDRESS = \"$USER@fit.edu\" i.e., remove the 'my.' domain, to ensure you receive emails. This could be\nautomated by checking if $HOME contains /udrive/faculty , /udrive/student ,\nor /udrive/staff , but the author is not familiar enough with the email address\nprotocols of Florida Tech to reliably automate that in a future-proof fashion. Cleaning There are three cleaning targets within the Makefile, clean , clean-logs , and clean-objs . make clean will remove all object files, module files, and\ncompiled executables. make clean-objs will only remove object (.o) files,\nleaving the executables and module (.mod) files intact. Finally, make clean-logs will only remove the output and error files within the logs/\ndirectory. TODO [ ] Get rid of control through environment variables and implement a conf file\n  reader, a la Finer [ ] Figure out what 2damrhistss is trying to do, and redirect I/O accordingly. Developer Info Ming Zhang and contributors","tags":"home","url":"index.html"},{"title":"gregorian_date – SEP-Stochastic ","text":"type, public :: gregorian_date Components Type Visibility Attributes Name Initial integer, public :: iday integer, public :: iyday integer, public :: iyear integer, public :: month","tags":"","url":"type/gregorian_date.html"},{"title":"rk4 – SEP-Stochastic","text":"public  function rk4(f, x0, y0, h, odefun_param) result(yout) single step of RK4 Arguments Type Intent Optional Attributes Name procedure( odefun ) :: f real(kind=real64) :: x0 real(kind=real64) :: y0 (:) real(kind=real64) :: h real(kind=real64) :: odefun_param Return Value real(kind=real64), allocatable, (:)","tags":"","url":"proc/rk4.html"},{"title":"odefun – SEP-Stochastic","text":"interface public  function odefun(x, y, p) result(v) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x real(kind=real64), intent(in) :: y (3) real(kind=real64), intent(in) :: p Return Value real(kind=real64)(3)","tags":"","url":"interface/odefun.html"},{"title":"fl_open – SEP-Stochastic","text":"public  subroutine fl_open(nfl, nsts) opens file pclfil and assigns to nsts and\nopens file anfil  and assigns to nfl\npclfil and anfil is set in readparam Arguments Type Intent Optional Attributes Name integer, intent(out) :: nfl integer, intent(out) :: nsts Common Blocks record_nodes (subroutine) read_param (subroutine) \">\n           common /filnm/ Type Attributes Name Initial character(len=256) :: anfil character(len=256) :: anstfil character(len=256) :: finfil character(len=256) :: nodesfil character(len=256) :: pclfil character(len=256) :: sucfil common /nfinish/ Type Attributes Name Initial integer :: nfinish shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /rankstr/ Type Attributes Name Initial character(len=2) :: rankstr","tags":"","url":"proc/fl_open.html"},{"title":"open_file_from_environment – SEP-Stochastic","text":"public  subroutine open_file_from_environment(env_var_name, fileunit, file_form, file_status) Uses iso_fortran_env Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: env_var_name integer, intent(out) :: fileunit character(len=*), intent(in) :: file_form character(len=*), intent(in), optional :: file_status","tags":"","url":"proc/open_file_from_environment.html"},{"title":"read_b1rs – SEP-Stochastic","text":"public  subroutine read_b1rs(b1rsgrid) Read the magnetic field as a grid in spherical coordinates. Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: b1rsgrid (0:N_R,0:N_THETA,0:N_PHI)","tags":"","url":"proc/read_b1rs.html"},{"title":"read_maggrid – SEP-Stochastic","text":"public  subroutine read_maggrid(magfieldgrid, gbgrid) Read B and grad B from a magnetic grid file Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: magfieldgrid (0:N_R,0:N_THETA,0:N_PHI,3) real(kind=real64), intent(out) :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3)","tags":"","url":"proc/read_maggrid.html"},{"title":"read_param – SEP-Stochastic","text":"public  subroutine read_param(nodes, nseeds) Arguments Type Intent Optional Attributes Name integer, intent(out) :: nodes integer, intent(out), allocatable :: nseeds (:) Common Blocks fs0 (function) \">\n           common /acc/ Type Attributes Name Initial real(kind=real64) :: ecrmax real(kind=real64) :: ecrmin real(kind=real64) :: etinj real(kind=real64) :: fampb real(kind=real64) :: ob0 real(kind=real64) :: obw real(kind=real64) :: ratkp cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir fl_open (subroutine) record_nodes (subroutine) \">\n           common /filnm/ Type Attributes Name Initial character(len=256) :: anfil character(len=256) :: anstfil character(len=256) :: finfil character(len=256) :: nodesfil character(len=256) :: pclfil character(len=256) :: sucfil get_rlambda0 (function) set_rlambda (subroutine) vfunc (subroutine) shockfront (program) sim3d (program) \">\n           common /ndmumu/ Type Attributes Name Initial integer :: ndmumu split (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt get_rlambdax (function) cofm (subroutine) set_rlambdax (subroutine) shockfront (program) sim3d (program) \">\n           common /ndxx/ Type Attributes Name Initial integer :: ndxx set_rlambda (subroutine) \">\n           common /nlambda/ Type Attributes Name Initial integer :: nlambda split (subroutine) walk3d (subroutine) walk3d (subroutine) walk3d (subroutine) \">\n           common /nlambdaconst/ Type Attributes Name Initial integer :: nlambdaconst set_rlambdax (subroutine) \">\n           common /nlambdax/ Type Attributes Name Initial integer :: nlambdax get_rlambda (function) set_rlambda (subroutine) \">\n           common /rlambda/ Type Attributes Name Initial real(kind=real64) :: rlambda get_rlambdax (function) set_rlambdax (subroutine) \">\n           common /rlambdax/ Type Attributes Name Initial real(kind=real64) :: rlambdax real(kind=real64) :: rlambday Namelists Namelist input Variables Name Type Default Description vswSI real(kind=real64) None rsSI real(kind=real64) None bemNT real(kind=real64) None TsunDAY real(kind=real64) None facip real(kind=real64) None Namelist io Variables Name Type Default Description f1n character(len=256) None f2n character(len=256) None Namelist dpdt Variables Name Type Default Description ndpdt integer None Namelist dmumu Variables Name Type Default Description rlambda real(kind=real64) None nlambda integer None ndmumu integer None nlambdaconst integer None Namelist dxx Variables Name Type Default Description rlambdax real(kind=real64) None rlambday real(kind=real64) None ndxx integer None nlambdax integer None Namelist shkacc Variables Name Type Default Description ecrmax real(kind=real64) None ecrmin real(kind=real64) None ob0 real(kind=real64) None obw real(kind=real64) None etinj real(kind=real64) None fampb real(kind=real64) None ratkp real(kind=real64) None","tags":"","url":"proc/read_param.html"},{"title":"read_seeds – SEP-Stochastic","text":"public  subroutine read_seeds(n, nseeds) Arguments Type Intent Optional Attributes Name integer, intent(in) :: n integer, intent(out), allocatable :: nseeds (:)","tags":"","url":"proc/read_seeds.html"},{"title":"read_shtc – SEP-Stochastic","text":"public  subroutine read_shtc(g, h, n) populate g(:,:), h(:,:) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: g (0:n,0:n) real(kind=real64), intent(out) :: h (0:n,0:n) integer, intent(in) :: n size of g and h","tags":"","url":"proc/read_shtc.html"},{"title":"record_nodes – SEP-Stochastic","text":"public  subroutine record_nodes(nodes) Arguments Type Intent Optional Attributes Name integer, intent(in) :: nodes Common Blocks fl_open (subroutine) read_param (subroutine) \">\n           common /filnm/ Type Attributes Name Initial character(len=256) :: anfil character(len=256) :: anstfil character(len=256) :: finfil character(len=256) :: nodesfil character(len=256) :: pclfil character(len=256) :: sucfil","tags":"","url":"proc/record_nodes.html"},{"title":"write_b1rs – SEP-Stochastic","text":"public  subroutine write_b1rs(b1rs, map) writes mapping of magnetic field at a point to the solar surface Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: b1rs (0:N_R,0:N_THETA,0:N_PHI,2) integer, intent(in) :: map (0:N_R,0:N_THETA,0:N_PHI)","tags":"","url":"proc/write_b1rs.html"},{"title":"write_head – SEP-Stochastic","text":"public  subroutine write_head(nfl, nf) Arguments Type Intent Optional Attributes Name integer, intent(in) :: nfl integer, intent(in) :: nf","tags":"","url":"proc/write_head.html"},{"title":"write_maggrid – SEP-Stochastic","text":"public  subroutine write_maggrid(bgrid, gbgrid) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: bgrid (0:N_R,0:N_THETA,0:N_PHI,3) real(kind=real64), intent(in) :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3)","tags":"","url":"proc/write_maggrid.html"},{"title":"gregorian – SEP-Stochastic","text":"public pure function gregorian(julian) This routine converts Julian day number to calendar (Gregorian) date. Arguments Type Intent Optional Attributes Name integer, intent(in) :: julian Julian day (integer) Return Value type( gregorian_date )","tags":"","url":"proc/gregorian.html"},{"title":"is_leap_year – SEP-Stochastic","text":"public pure function is_leap_year(year) returns if a function is a Gregorian leap year Arguments Type Intent Optional Attributes Name integer, intent(in) :: year Return Value logical","tags":"","url":"proc/is_leap_year.html"},{"title":"julday – SEP-Stochastic","text":"public  function julday(mm, id, iyyy) Arguments Type Intent Optional Attributes Name integer, intent(in) :: mm integer, intent(in) :: id integer, intent(in) :: iyyy Return Value integer","tags":"","url":"proc/julday.html"},{"title":"modjulianday – SEP-Stochastic","text":"public  function modjulianday(year, month, day, fracday) calculate the julian day from day, month, year and fraction of a day Arguments Type Intent Optional Attributes Name integer, intent(in) :: year integer, intent(in) :: month integer, intent(in) :: day real(kind=real64), intent(in) :: fracday Return Value real(kind=real64)","tags":"","url":"proc/modjulianday.html"},{"title":"seconds_of_year – SEP-Stochastic","text":"public  function seconds_of_year() result(total_seconds) return how many seconds have passed since the year started Arguments None Return Value integer","tags":"","url":"proc/seconds_of_year.html"},{"title":"caldate – SEP-Stochastic","text":"public  subroutine caldate(jday, iyear, iyday) This routine takes the modified Julian date and\nconverts it to a date and time string. Calls:  GREGORIAN Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: jday modified Julian day (integer) integer, intent(out) :: iyear year (integer) integer, intent(out) :: iyday year day (integer)","tags":"","url":"proc/caldate.html"},{"title":"get_rlambda – SEP-Stochastic","text":"public  function get_rlambda() Arguments None Return Value real(kind=real64) Common Blocks read_param (subroutine) set_rlambda (subroutine) \">\n           common /rlambda/ Type Attributes Name Initial real(kind=real64) :: rlambda","tags":"","url":"proc/get_rlambda.html"},{"title":"get_rlambda0 – SEP-Stochastic","text":"public  function get_rlambda0(e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Return Value real(kind=real64) Common Blocks read_param (subroutine) set_rlambda (subroutine) vfunc (subroutine) shockfront (program) sim3d (program) \">\n           common /ndmumu/ Type Attributes Name Initial integer :: ndmumu","tags":"","url":"proc/get_rlambda0.html"},{"title":"get_rlambdax – SEP-Stochastic","text":"public  function get_rlambdax() Arguments None Return Value real(kind=real64) Common Blocks read_param (subroutine) cofm (subroutine) set_rlambdax (subroutine) shockfront (program) sim3d (program) \">\n           common /ndxx/ Type Attributes Name Initial integer :: ndxx read_param (subroutine) set_rlambdax (subroutine) \">\n           common /rlambdax/ Type Attributes Name Initial real(kind=real64) :: rlambdax real(kind=real64) :: rlambday","tags":"","url":"proc/get_rlambdax.html"},{"title":"get_rlambdax0 – SEP-Stochastic","text":"public  function get_rlambdax0(e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Return Value real(kind=real64)","tags":"","url":"proc/get_rlambdax0.html"},{"title":"get_rlambday0 – SEP-Stochastic","text":"public  function get_rlambday0(e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Return Value real(kind=real64)","tags":"","url":"proc/get_rlambday0.html"},{"title":"cofm – SEP-Stochastic","text":"public  subroutine cofm(r, p, pa, beta, bv, bm, cvtu, gbm, dbbds, b1s, gb1s, g, dg) calculate diffusion coeficients in magnetic field coordinate\nand derivatives of g with respect to r, theta, phi\n2 perpendicular coeficients must equal to the poles Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(in) :: p real(kind=real64), intent(in) :: pa real(kind=real64), intent(in) :: beta real(kind=real64), intent(in) :: bv (3) real(kind=real64), intent(in) :: bm real(kind=real64), intent(in) :: cvtu (3) real(kind=real64), intent(in) :: gbm (3) real(kind=real64), intent(in) :: dbbds real(kind=real64), intent(in) :: b1s real(kind=real64), intent(in) :: gb1s (3) real(kind=real64), intent(out) :: g (3) real(kind=real64), intent(out) :: dg (3) Common Blocks read_param (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_dxx (subroutine) \">\n           common /dxxcnst/ Type Attributes Name Initial real(kind=real64) :: a (3) real(kind=real64) :: b (3) real(kind=real64) :: g0 (3) read_param (subroutine) get_rlambdax (function) set_rlambdax (subroutine) shockfront (program) sim3d (program) \">\n           common /ndxx/ Type Attributes Name Initial integer :: ndxx","tags":"","url":"proc/cofm.html"},{"title":"preparedxx – SEP-Stochastic","text":"public  subroutine preparedxx(ndxx) Arguments Type Intent Optional Attributes Name integer, intent(in) :: ndxx","tags":"","url":"proc/preparedxx.html"},{"title":"read_dxx – SEP-Stochastic","text":"public  subroutine read_dxx(ndxx) Arguments Type Intent Optional Attributes Name integer, intent(in) :: ndxx Common Blocks read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir cofm (subroutine) \">\n           common /dxxcnst/ Type Attributes Name Initial real(kind=real64) :: a (3) real(kind=real64) :: b (3) real(kind=real64) :: g0 (3) Namelists Namelist inputdxx Variables Name Type Default Description gperCMS real(kind=real64) None bper real(kind=real64) None aper real(kind=real64) None","tags":"","url":"proc/read_dxx.html"},{"title":"set_rlambda – SEP-Stochastic","text":"public  subroutine set_rlambda(e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Common Blocks dmumuDG1 (function) read_dmumuDG (subroutine) \">\n           common /dmumuDGcnst/ Type Attributes Name Initial real(kind=real64) :: delta real(kind=real64) :: du0 real(kind=real64) :: rnu real(kind=real64) :: va read_param (subroutine) get_rlambda0 (function) vfunc (subroutine) shockfront (program) sim3d (program) \">\n           common /ndmumu/ Type Attributes Name Initial integer :: ndmumu read_param (subroutine) \">\n           common /nlambda/ Type Attributes Name Initial integer :: nlambda read_param (subroutine) get_rlambda (function) \">\n           common /rlambda/ Type Attributes Name Initial real(kind=real64) :: rlambda","tags":"","url":"proc/set_rlambda.html"},{"title":"set_rlambdax – SEP-Stochastic","text":"public  subroutine set_rlambdax(e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Common Blocks read_param (subroutine) get_rlambdax (function) cofm (subroutine) shockfront (program) sim3d (program) \">\n           common /ndxx/ Type Attributes Name Initial integer :: ndxx read_param (subroutine) \">\n           common /nlambdax/ Type Attributes Name Initial integer :: nlambdax read_param (subroutine) get_rlambdax (function) \">\n           common /rlambdax/ Type Attributes Name Initial real(kind=real64) :: rlambdax real(kind=real64) :: rlambday","tags":"","url":"proc/set_rlambdax.html"},{"title":"prepareptcl – SEP-Stochastic","text":"public  subroutine prepareptcl(tf, rf, ef, rmuf, np, nf) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out), allocatable :: tf (:) real(kind=real64), intent(out), allocatable :: rf (:,:) real(kind=real64), intent(out), allocatable :: ef (:) real(kind=real64), intent(out), allocatable :: rmuf (:) integer :: np integer :: nf Common Blocks read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te","tags":"","url":"proc/prepareptcl.html"},{"title":"magfield – SEP-Stochastic","text":"function magfield(rvec) result(b) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rvec (3) Return Value real(kind=real64), (3)","tags":"","url":"proc/magfield.html"},{"title":"vfunc – SEP-Stochastic","text":"function vfunc(t, r, pol) result(v) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: t real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(in) :: pol Return Value real(kind=real64), (3)","tags":"","url":"proc/vfunc.html"},{"title":"fb0 – SEP-Stochastic","text":"public  function fb0(torg, rpb) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: torg real(kind=real64), intent(in) :: rpb (5) Return Value real(kind=real64)","tags":"","url":"proc/fb0.html"},{"title":"fs0 – SEP-Stochastic","text":"public  function fs0(tacc, xpk, bm, u1, densw, ob, amach, rsh, vth, pinj, pc) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: tacc real(kind=real64), intent(in) :: xpk (6) real(kind=real64), intent(in) :: bm real(kind=real64), intent(in) :: u1 real(kind=real64), intent(in) :: densw real(kind=real64), intent(in) :: ob real(kind=real64), intent(in) :: amach real(kind=real64), intent(in) :: rsh real(kind=real64), intent(in) :: vth real(kind=real64), intent(inout) :: pinj real(kind=real64), intent(inout) :: pc Return Value real(kind=real64) Common Blocks read_param (subroutine) \">\n           common /acc/ Type Attributes Name Initial real(kind=real64) :: ecrmax real(kind=real64) :: ecrmin real(kind=real64) :: etinj real(kind=real64) :: fampb real(kind=real64) :: ob0 real(kind=real64) :: obw real(kind=real64) :: ratkp e2p (function) rp2e (function) rp2beta (function) beta2p (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz","tags":"","url":"proc/fs0.html"},{"title":"preparefb – SEP-Stochastic","text":"public  subroutine preparefb() Arguments None Common Blocks read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir f0mod (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) Namelists Namelist fb Variables Name Type Default Description rb0 real(kind=real64) None rmax real(kind=real64) None rk real(kind=real64) None deltat real(kind=real64) None tc real(kind=real64) None tl real(kind=real64) None tmodel0 real(kind=real64) None nfbconst integer None sclat real(kind=real64) None sclong real(kind=real64) None scanw real(kind=real64) None","tags":"","url":"proc/preparefb.html"},{"title":"cartesian2spherical – SEP-Stochastic","text":"public  function cartesian2spherical(x) result(r) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x (3) Return Value real(kind=real64), (3)","tags":"","url":"proc/cartesian2spherical.html"},{"title":"dmrtx – SEP-Stochastic","text":"public  function dmrtx(sintheta, costheta, sinphi, cosphi, dtheta, dphi) calculate martix from polar spheric to xyz coordinates Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: sintheta real(kind=real64), intent(in) :: costheta real(kind=real64), intent(in) :: sinphi real(kind=real64), intent(in) :: cosphi real(kind=real64), intent(in) :: dtheta real(kind=real64), intent(in) :: dphi Return Value real(kind=real64), (3,3)","tags":"","url":"proc/dmrtx.html"},{"title":"dmxptr – SEP-Stochastic","text":"public  function dmxptr(gm, dgm) calculate matrix for xyz' ellipsoid coordinate Kwon to spheric Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: gm real(kind=real64), intent(in) :: dgm Return Value real(kind=real64), (3,3)","tags":"","url":"proc/dmxptr.html"},{"title":"mbtr – SEP-Stochastic","text":"public  function mbtr(uax1, uax2, uax3) result(b2r) calculate martix from magnetic to polar spheric coordinates Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: uax1 (3) real(kind=real64), intent(in) :: uax2 (3) real(kind=real64), intent(in) :: uax3 (3) Return Value real(kind=real64), (3,3)","tags":"","url":"proc/mbtr.html"},{"title":"mrtx – SEP-Stochastic","text":"public  function mrtx(sintheta, costheta, sinphi, cosphi) calculate martix from polar spheric to xyz coordinates Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: sintheta real(kind=real64), intent(in) :: costheta real(kind=real64), intent(in) :: sinphi real(kind=real64), intent(in) :: cosphi Return Value real(kind=real64), (3,3)","tags":"","url":"proc/mrtx.html"},{"title":"mxptr – SEP-Stochastic","text":"public  function mxptr(gm) result(xptr) calculate matrix for xyz' ellipsoid coordinate Kwon to spheric Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: gm Return Value real(kind=real64), (3,3)","tags":"","url":"proc/mxptr.html"},{"title":"norm2 – SEP-Stochastic","text":"public  function norm2(arr) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: arr (:) Return Value real(kind=real64)","tags":"","url":"proc/norm2.html"},{"title":"spherical2cartesian – SEP-Stochastic","text":"public  function spherical2cartesian(r) result(x) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) Return Value real(kind=real64), (3)","tags":"","url":"proc/spherical2cartesian.html"},{"title":"trilinear – SEP-Stochastic","text":"public  function trilinear(phic, x) result(phi) trilinear interpolation Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: phic (2,2,2) the value of phi at the corner of cubic box of side 1 real(kind=real64), intent(in) :: x (3) location inside the cube (0<=x<=1) or outside x<0 x>1 Return Value real(kind=real64) interpolated phi","tags":"","url":"proc/trilinear.html"},{"title":"trilineardif – SEP-Stochastic","text":"public  function trilineardif(phic, x) result(dphi) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: phic (2,2,2) phic the value of phi at the corner of cubic box of side 1 real(kind=real64), intent(in) :: x (3) location inside the cube (0<=x<=1) or outside x<0 x>1 Return Value real(kind=real64), (3) dphi(1)=dphi/dx, dphi(2)=dphi/dy, dphi(3)=dphi/dz","tags":"","url":"proc/trilineardif.html"},{"title":"gasdev – SEP-Stochastic","text":"public impure function gasdev(idum) This function uses Box-Muller transform to generate two normally\ndistributed random numbers at a time Arguments Type Intent Optional Attributes Name integer, intent(inout) :: idum Return Value real(kind=real64)","tags":"","url":"proc/gasdev.html"},{"title":"ran2 – SEP-Stochastic","text":"public  function ran2(idum) Arguments Type Intent Optional Attributes Name integer, intent(inout) :: idum Return Value real(kind=real64)","tags":"","url":"proc/ran2.html"},{"title":"locate – SEP-Stochastic","text":"public  function locate(xx, n, x) result(j) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: xx (n) integer, intent(in) :: n real(kind=real64), intent(in) :: x Return Value integer","tags":"","url":"proc/locate.html"},{"title":"inorout – SEP-Stochastic","text":"public  subroutine inorout(tsh, x, dnsk, vsk, vnx) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: tsh real(kind=real64), intent(in) :: x (6) real(kind=real64), intent(inout) :: dnsk real(kind=real64), intent(out) :: vsk real(kind=real64), intent(out) :: vnx (3) Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw preparecme (subroutine) sksurface (subroutine) \">\n           common /cmesk/ Type Attributes Name Initial real(kind=real64) :: acsk integer :: nsk real(kind=real64) :: pexsk (0:144,8) real(kind=real64) :: pska (20,8) real(kind=real64) :: tska (20) real(kind=real64) :: vskf0 prepareptcl (subroutine) split (subroutine) preparecme (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te preparecme (subroutine) sksurface (subroutine) sim3d (program) \">\n           common /vsksw/ Type Attributes Name Initial real(kind=real64) :: tauc1_0 real(kind=real64) :: tauc2 real(kind=real64) :: tauc2_0 real(kind=real64) :: tauf real(kind=real64) :: vcme0 real :: vcme0kmPs real(kind=real64) :: vsksw","tags":"","url":"proc/inorout.html"},{"title":"preparecme – SEP-Stochastic","text":"public  subroutine preparecme() read in parameters for CME shock ellipsoid in Kwon's model =======if using data or observation at 1au to calculate Va and Vs=======\nbm densw,tempsw could be replaced with those from observation =======if using data at rc1 to calculate Va and Vs directly=====\nmagnetosonic speed (Vms): Vms 2 = 0.5 * {Va 2 + Vs 2 + [(Va 2 + Vs 2) 2 -\n 4 * Va 2 * Vs 2 * (cos (theta)) 2] 0.5}\n====================================================\n----------choose smaller one----------------------------------- if (tauc2_0 Arguments None Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw inorout (subroutine) sksurface (subroutine) \">\n           common /cmesk/ Type Attributes Name Initial real(kind=real64) :: acsk integer :: nsk real(kind=real64) :: pexsk (0:144,8) real(kind=real64) :: pska (20,8) real(kind=real64) :: tska (20) real(kind=real64) :: vskf0 read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir prepareptcl (subroutine) split (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te inorout (subroutine) sksurface (subroutine) sim3d (program) \">\n           common /vsksw/ Type Attributes Name Initial real(kind=real64) :: tauc1_0 real(kind=real64) :: tauc2 real(kind=real64) :: tauc2_0 real(kind=real64) :: tauf real(kind=real64) :: vcme0 real :: vcme0kmPs real(kind=real64) :: vsksw","tags":"","url":"proc/preparecme.html"},{"title":"compress – SEP-Stochastic","text":"public  function compress(amach, smach, ob) result(rsh) use bisection to search for root of shock adiabatic equation\ncalculate shock compression ratio of oblique MHD shock Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: amach real(kind=real64), intent(in) :: smach real(kind=real64), intent(in) :: ob Return Value real(kind=real64), (3)","tags":"","url":"proc/compress.html"},{"title":"solarwind1 – SEP-Stochastic","text":"public  function solarwind1(r) result(vpl) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) Return Value real(kind=real64), (3) Common Blocks read_param (subroutine) cofm (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw","tags":"","url":"proc/solarwind1.html"},{"title":"solarwindtemp – SEP-Stochastic","text":"public  function solarwindtemp(r) result(temp) Solar wind temperature at position vector r Uses empirical model in the corona from Withbroe (ApJ 325,442,1988) 10.1086/166015 Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) Return Value real(kind=real64)","tags":"","url":"proc/solarwindtemp.html"},{"title":"drvbmag – SEP-Stochastic","text":"public  subroutine drvbmag(r1, b, bmag, cvtu, gbmag, bxgb2, dbbds, pol, b1rs, gb1rs) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r1 (3) real(kind=real64), intent(out) :: b (3) real(kind=real64), intent(out) :: bmag real(kind=real64), intent(out) :: cvtu (3) real(kind=real64), intent(out) :: gbmag (3) real(kind=real64), intent(out) :: bxgb2 (3) real(kind=real64), intent(out) :: dbbds real(kind=real64), intent(out) :: pol real(kind=real64), intent(out) :: b1rs real(kind=real64), intent(out) :: gb1rs (3) Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw","tags":"","url":"proc/drvbmag.html"},{"title":"f0mod – SEP-Stochastic","text":"public  subroutine f0mod(r, pa, f0, df0, ddf0, df0dmu, ddf0dmu2) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(in) :: pa real(kind=real64), intent(out) :: f0 real(kind=real64), intent(out) :: df0 (3) real(kind=real64), intent(out) :: ddf0 (3,3) real(kind=real64), intent(out) :: df0dmu real(kind=real64), intent(out) :: ddf0dmu2 Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw preparefb (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 preparefb (subroutine) prepareptcl (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4)","tags":"","url":"proc/f0mod.html"},{"title":"solarwind – SEP-Stochastic","text":"public  subroutine solarwind(r, vpl, gvpl, densw) calculate solar wind velocity in the corotating frame\n  and its gradient\n in spherical coordinate system Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(out) :: vpl (3) real(kind=real64), intent(out) :: gvpl (3,3) real(kind=real64), intent(out) :: densw solar wind density Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw","tags":"","url":"proc/solarwind.html"},{"title":"split – SEP-Stochastic","text":"public recursive subroutine split(iseed, rpb, ck, fs, t, nsplvl, dnsk, bv0, flx, dflx, walk3d, nsts) Arguments Type Intent Optional Attributes Name integer, intent(in) :: iseed real(kind=real64), intent(in) :: rpb (5) real(kind=real64), intent(inout) :: ck real(kind=real64), intent(inout) :: fs real(kind=real64), intent(in) :: t integer, intent(inout) :: nsplvl real(kind=real64), intent(inout) :: dnsk real(kind=real64), intent(inout) :: bv0 (3) real(kind=real64), intent(inout) :: flx real(kind=real64), intent(inout) :: dflx real :: walk3d integer, intent(in) :: nsts Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_param (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt read_param (subroutine) walk3d (subroutine) walk3d (subroutine) walk3d (subroutine) \">\n           common /nlambdaconst/ Type Attributes Name Initial integer :: nlambdaconst common /rb0max/ Type Attributes Name Initial real(kind=real64) :: rb0 real(kind=real64) :: rmax preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /svsp/ Type Attributes Name Initial real(kind=real64) :: bv0sv (3,2**(NSPMAX+1)) real(kind=real64) :: cksv (2**(NSPMAX+1)) real(kind=real64) :: dnsksv (2**(NSPMAX+1)) real(kind=real64) :: fssv (2**(NSPMAX+1)) integer :: nodr (NSPMAX) real(kind=real64) :: rpbsv (5,2**(NSPMAX+1)) real(kind=real64) :: t0sv (2**(NSPMAX+1)) prepareptcl (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te","tags":"","url":"proc/split.html"},{"title":"vfunc – SEP-Stochastic","text":"public  subroutine vfunc(t, xpk, dxpkdt, du, gxw2, gxw3, bv0, densw, vpl, gper, b1s) Velocity function Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: t real(kind=real64), intent(in) :: xpk (6) real(kind=real64), intent(out) :: dxpkdt (6) real(kind=real64) :: du real(kind=real64), intent(out) :: gxw2 (3) real(kind=real64), intent(out) :: gxw3 (3) real(kind=real64), intent(out) :: bv0 (3) real(kind=real64) :: densw real(kind=real64) :: vpl (3) real(kind=real64), intent(out) :: gper real(kind=real64) :: b1s Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_param (subroutine) get_rlambda0 (function) set_rlambda (subroutine) shockfront (program) sim3d (program) \">\n           common /ndmumu/ Type Attributes Name Initial integer :: ndmumu e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4)","tags":"","url":"proc/vfunc~2.html"},{"title":"dmumuAH – SEP-Stochastic","text":"public  function dmumuAH(p, pa, bm, ddu) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: p real(kind=real64), intent(in) :: pa real(kind=real64), intent(in) :: bm real(kind=real64), intent(out) :: ddu Return Value real(kind=real64) Common Blocks read_dmumuAH (subroutine) \">\n           common /dmumuAHcnst/ Type Attributes Name Initial real(kind=real64) :: a1 real(kind=real64) :: b1 real(kind=real64) :: du0","tags":"","url":"proc/dmumuah.html"},{"title":"dmumuBK – SEP-Stochastic","text":"public  function dmumuBK(p, pa, v, bm, ddu) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: p real(kind=real64), intent(in) :: pa real(kind=real64), intent(in) :: v real(kind=real64), intent(in) :: bm real(kind=real64), intent(out) :: ddu Return Value real(kind=real64) Common Blocks read_dmumuBK (subroutine) \">\n           common /dmumuBKcnst/ Type Attributes Name Initial real(kind=real64) :: a1 real(kind=real64) :: b1 real(kind=real64) :: du0 real(kind=real64) :: h real(kind=real64) :: qindx real(kind=real64) :: sigma","tags":"","url":"proc/dmumubk.html"},{"title":"dmumuDG – SEP-Stochastic","text":"public  function dmumuDG(v, rmu0, ddmumuDG) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: v real(kind=real64), intent(inout) :: rmu0 real(kind=real64), intent(out) :: ddmumuDG Return Value real(kind=real64)","tags":"","url":"proc/dmumudg.html"},{"title":"dmumuDG1 – SEP-Stochastic","text":"public  function dmumuDG1(v, rmu, ddmumuDG1) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: v real(kind=real64), intent(inout) :: rmu real(kind=real64), intent(out) :: ddmumuDG1 Return Value real(kind=real64) Common Blocks read_dmumuDG (subroutine) set_rlambda (subroutine) \">\n           common /dmumuDGcnst/ Type Attributes Name Initial real(kind=real64) :: delta real(kind=real64) :: du0 real(kind=real64) :: rnu real(kind=real64) :: va","tags":"","url":"proc/dmumudg1.html"},{"title":"sign_my – SEP-Stochastic","text":"public pure elemental function sign_my(x) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value real(kind=real64)","tags":"","url":"proc/sign_my.html"},{"title":"cofdu – SEP-Stochastic","text":"public  subroutine cofdu(p, pa, beta, bm, du, ddu, ndmumu) subroutine to calculate pitch angle diffusion coefficient\nand its derivative with respect to pa = cos(). Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: p real(kind=real64), intent(inout) :: pa real(kind=real64), intent(in) :: beta real(kind=real64), intent(in) :: bm real(kind=real64), intent(out) :: du real(kind=real64), intent(out) :: ddu integer, intent(in) :: ndmumu","tags":"","url":"proc/cofdu.html"},{"title":"preparedmumu – SEP-Stochastic","text":"public  subroutine preparedmumu(ndmumu) Arguments Type Intent Optional Attributes Name integer, intent(in) :: ndmumu","tags":"","url":"proc/preparedmumu.html"},{"title":"read_dmumuAH – SEP-Stochastic","text":"public  subroutine read_dmumuAH() Arguments None Common Blocks read_dmumuDG (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir dmumuAH (function) \">\n           common /dmumuAHcnst/ Type Attributes Name Initial real(kind=real64) :: a1 real(kind=real64) :: b1 real(kind=real64) :: du0 Namelists Namelist inputdmumuAH Variables Name Type Default Description du0 real(kind=real64) None b1 real(kind=real64) None a1 real(kind=real64) None","tags":"","url":"proc/read_dmumuah.html"},{"title":"read_dmumuBK – SEP-Stochastic","text":"public  subroutine read_dmumuBK() Arguments None Common Blocks read_dmumuDG (subroutine) read_dmumuAH (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir dmumuBK (function) \">\n           common /dmumuBKcnst/ Type Attributes Name Initial real(kind=real64) :: a1 real(kind=real64) :: b1 real(kind=real64) :: du0 real(kind=real64) :: h real(kind=real64) :: qindx real(kind=real64) :: sigma Namelists Namelist inputdmumuBK Variables Name Type Default Description du0 real(kind=real64) None rlambda real(kind=real64) None nlambda integer None b1 real(kind=real64) None a1 real(kind=real64) None qindx real(kind=real64) None sigma real(kind=real64) None h real(kind=real64) None","tags":"","url":"proc/read_dmumubk.html"},{"title":"read_dmumuDG – SEP-Stochastic","text":"public  subroutine read_dmumuDG() Arguments None Common Blocks read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir dmumuDG1 (function) set_rlambda (subroutine) \">\n           common /dmumuDGcnst/ Type Attributes Name Initial real(kind=real64) :: delta real(kind=real64) :: du0 real(kind=real64) :: rnu real(kind=real64) :: va Namelists Namelist inputdmumuDG Variables Name Type Default Description du0 real(kind=real64) None rnu real(kind=real64) None delta real(kind=real64) None va real(kind=real64) None","tags":"","url":"proc/read_dmumudg.html"},{"title":"set_du0AH – SEP-Stochastic","text":"public  subroutine set_du0AH(du0rt, du0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: du0rt real(kind=real64), intent(inout) :: du0","tags":"","url":"proc/set_du0ah.html"},{"title":"set_du0BK – SEP-Stochastic","text":"public  subroutine set_du0BK(du0rt, du0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: du0rt real(kind=real64), intent(inout) :: du0","tags":"","url":"proc/set_du0bk.html"},{"title":"set_du0DG – SEP-Stochastic","text":"public  subroutine set_du0DG(du0rt, du0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: du0rt real(kind=real64), intent(inout) :: du0","tags":"","url":"proc/set_du0dg.html"},{"title":"sksurface – SEP-Stochastic","text":"subroutine sksurface(tsh, x, n) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: tsh real(kind=real64), intent(out) :: x (6) integer, intent(in) :: n Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw preparecme (subroutine) inorout (subroutine) \">\n           common /cmesk/ Type Attributes Name Initial real(kind=real64) :: acsk integer :: nsk real(kind=real64) :: pska (20,8) real(kind=real64) :: tska (20) real(kind=real64) :: vskf0 prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te preparecme (subroutine) inorout (subroutine) sim3d (program) \">\n           common /vsksw/ Type Attributes Name Initial real(kind=real64) :: tauc1_0 real(kind=real64) :: tauc2 real(kind=real64) :: tauc2_0 real(kind=real64) :: tauf real(kind=real64) :: vcme0 real :: vcme0kmPs real(kind=real64) :: vsksw","tags":"","url":"proc/sksurface.html"},{"title":"walk3d – SEP-Stochastic","text":"subroutine walk3d(iseed, rp0, rpb, ck, fs, t0, t, tsp, ns, dnsk0, bv0, nsplvl) Uses param fb random walk of energetic particles in magnetic\nvariables: t, xp(5)\n- x - spatial coordinators\n- p - momentum\n- pa - pitch angle Arguments Type Intent Optional Attributes Name integer :: iseed real(kind=real64) :: rp0 (5) real(kind=real64) :: rpb (5) real(kind=real64) :: ck real(kind=real64) :: fs real(kind=real64) :: t0 real(kind=real64) :: t real(kind=real64) :: tsp integer :: ns real(kind=real64) :: dnsk0 real(kind=real64) :: bv0 (3) integer :: nsplvl Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw preparefb (subroutine) f0mod (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 read_param (subroutine) split (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt read_param (subroutine) split (subroutine) walk3d (subroutine) walk3d (subroutine) \">\n           common /nlambdaconst/ Type Attributes Name Initial integer :: nlambdaconst e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te","tags":"","url":"proc/walk3d.html"},{"title":"walk3d – SEP-Stochastic","text":"subroutine walk3d(iseed, rp0, rpb, ck, fs, t0, t, tsp, ns, ino, bv0, nsplvl) Uses param fb Arguments Type Intent Optional Attributes Name integer :: iseed real(kind=real64) :: rp0 (5) real(kind=real64) :: rpb (5) real(kind=real64) :: ck real(kind=real64) :: fs real(kind=real64) :: t0 real(kind=real64) :: t real(kind=real64) :: tsp integer :: ns integer :: ino real(kind=real64) :: bv0 (3) integer :: nsplvl Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw preparefb (subroutine) f0mod (subroutine) walk3d (subroutine) shockfront (program) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 read_param (subroutine) split (subroutine) walk3d (subroutine) shockfront (program) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt read_param (subroutine) split (subroutine) walk3d (subroutine) walk3d (subroutine) \">\n           common /nlambdaconst/ Type Attributes Name Initial integer :: nlambdaconst sim3d_em (program) \">\n           common /seed/ Type Attributes Name Initial integer :: nseeds (nseedmax) e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te","tags":"","url":"proc/walk3d~2.html"},{"title":"walk3d – SEP-Stochastic","text":"subroutine walk3d(iseed, rp0, rpb, ck, fs, t0, t, tsp, ns, dnsk0, bv0, nsplvl) Arguments Type Intent Optional Attributes Name integer, intent(inout) :: iseed real(kind=real64), intent(in) :: rp0 (5) real(kind=real64), intent(out) :: rpb (5) real(kind=real64), intent(inout) :: ck real(kind=real64), intent(inout) :: fs real(kind=real64), intent(in) :: t0 real(kind=real64), intent(out) :: t real(kind=real64), intent(in) :: tsp integer, intent(out) :: ns real(kind=real64), intent(inout) :: dnsk0 real(kind=real64), intent(inout) :: bv0 (3) integer, intent(in) :: nsplvl Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw preparefb (subroutine) f0mod (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 read_param (subroutine) split (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt read_param (subroutine) split (subroutine) walk3d (subroutine) walk3d (subroutine) \">\n           common /nlambdaconst/ Type Attributes Name Initial integer :: nlambdaconst e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te","tags":"","url":"proc/walk3d~3.html"},{"title":"plgndr – SEP-Stochastic","text":"function plgndr(l, m, x) Arguments Type Intent Optional Attributes Name integer, intent(in) :: l integer, intent(in) :: m real(kind=real64), intent(in) :: x Return Value real(kind=real64)","tags":"","url":"proc/plgndr.html"},{"title":"factorialratio – SEP-Stochastic","text":"subroutine factorialratio(fac_table) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: fac_table (NS,NS)","tags":"","url":"proc/factorialratio.html"},{"title":"init_aplm – SEP-Stochastic","text":"subroutine init_aplm(alp_arr, dalp_arr, d2alp_arr) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: alp_arr (0:N_THETA,0:NS,0:NS) populate alp, dalp, d2alp with the associated legendre polynomials,\nand its first and second derivatives respectively real(kind=real64), intent(out) :: dalp_arr (0:N_THETA,0:NS,0:NS) real(kind=real64), intent(out) :: d2alp_arr (0:N_THETA,0:NS,0:NS)","tags":"","url":"proc/init_aplm.html"},{"title":"magfield – SEP-Stochastic","text":"subroutine magfield(rvec, b, bmag, cvtu, gbmag, dbbds, srfctrtl, g, h) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rvec (3) real(kind=real64), intent(out) :: b (3) real(kind=real64), intent(out) :: bmag real(kind=real64), intent(out) :: cvtu (3) real(kind=real64), intent(out) :: gbmag (3) real(kind=real64), intent(out) :: dbbds real(kind=real64), intent(in) :: srfctrtl (NS,NS) real(kind=real64), intent(in) :: g (0:NS,0:NS) real(kind=real64), intent(in) :: h (0:NS,0:NS)","tags":"","url":"proc/magfield~2.html"},{"title":"beta2gamma – SEP-Stochastic","text":"public pure function beta2gamma(beta) convert beta (velocity in units of c) to Lorentz factor gamma Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: beta Return Value real(kind=real64)","tags":"","url":"proc/beta2gamma.html"},{"title":"beta2p – SEP-Stochastic","text":"public  function beta2p(beta) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: beta Return Value real(kind=real64) Common Blocks e2p (function) rp2e (function) rp2beta (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz","tags":"","url":"proc/beta2p.html"},{"title":"e2beta – SEP-Stochastic","text":"public  function e2beta(e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64)","tags":"","url":"proc/e2beta.html"},{"title":"e2gamma – SEP-Stochastic","text":"public  function e2gamma(e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64)","tags":"","url":"proc/e2gamma.html"},{"title":"e2p – SEP-Stochastic","text":"public  function e2p(e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64) Common Blocks rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz","tags":"","url":"proc/e2p.html"},{"title":"e2v – SEP-Stochastic","text":"public  function e2v(e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64)","tags":"","url":"proc/e2v.html"},{"title":"rp2beta – SEP-Stochastic","text":"public  function rp2beta(rp) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rp Return Value real(kind=real64) Common Blocks e2p (function) rp2e (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz","tags":"","url":"proc/rp2beta.html"},{"title":"rp2e – SEP-Stochastic","text":"public  function rp2e(rp) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rp Return Value real(kind=real64) Common Blocks e2p (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz","tags":"","url":"proc/rp2e.html"},{"title":"rp2v – SEP-Stochastic","text":"public  function rp2v(rp) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rp Return Value real(kind=real64)","tags":"","url":"proc/rp2v.html"},{"title":"v2p – SEP-Stochastic","text":"public  function v2p(v) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: v Return Value real(kind=real64)","tags":"","url":"proc/v2p.html"},{"title":"rksolvers – SEP-Stochastic","text":"Uses iso_fortran_env Interfaces interface public  function odefun(x, y, p) result(v) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x real(kind=real64), intent(in) :: y (3) real(kind=real64), intent(in) :: p Return Value real(kind=real64), (3) Functions public  function rk4 (f, x0, y0, h, odefun_param) result(yout) single step of RK4 Arguments Type Intent Optional Attributes Name procedure( odefun ) :: f real(kind=real64) :: x0 real(kind=real64) :: y0 (:) real(kind=real64) :: h real(kind=real64) :: odefun_param Return Value real(kind=real64), allocatable, (:)","tags":"","url":"module/rksolvers.html"},{"title":"file_op – SEP-Stochastic","text":"Uses param iso_fortran_env Subroutines public  subroutine fl_open (nfl, nsts) opens file pclfil and assigns to nsts and\nopens file anfil  and assigns to nfl\npclfil and anfil is set in readparam Arguments Type Intent Optional Attributes Name integer, intent(out) :: nfl integer, intent(out) :: nsts public  subroutine open_file_from_environment (env_var_name, fileunit, file_form, file_status) Arguments Type Intent Optional Attributes Name character(len=*), intent(in) :: env_var_name integer, intent(out) :: fileunit character(len=*), intent(in) :: file_form character(len=*), intent(in), optional :: file_status public  subroutine read_b1rs (b1rsgrid) Read the magnetic field as a grid in spherical coordinates. Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: b1rsgrid (0:N_R,0:N_THETA,0:N_PHI) public  subroutine read_maggrid (magfieldgrid, gbgrid) Read B and grad B from a magnetic grid file Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: magfieldgrid (0:N_R,0:N_THETA,0:N_PHI,3) real(kind=real64), intent(out) :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3) public  subroutine read_param (nodes, nseeds) Arguments Type Intent Optional Attributes Name integer, intent(out) :: nodes integer, intent(out), allocatable :: nseeds (:) public  subroutine read_seeds (n, nseeds) Arguments Type Intent Optional Attributes Name integer, intent(in) :: n integer, intent(out), allocatable :: nseeds (:) public  subroutine read_shtc (g, h, n) populate g(:,:), h(:,:) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: g (0:n,0:n) real(kind=real64), intent(out) :: h (0:n,0:n) integer, intent(in) :: n size of g and h public  subroutine record_nodes (nodes) Arguments Type Intent Optional Attributes Name integer, intent(in) :: nodes public  subroutine write_b1rs (b1rs, map) writes mapping of magnetic field at a point to the solar surface Arguments Type Intent Optional Attributes Name real(kind=real64), intent(inout) :: b1rs (0:N_R,0:N_THETA,0:N_PHI,2) integer, intent(in) :: map (0:N_R,0:N_THETA,0:N_PHI) public  subroutine write_head (nfl, nf) Arguments Type Intent Optional Attributes Name integer, intent(in) :: nfl integer, intent(in) :: nf public  subroutine write_maggrid (bgrid, gbgrid) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: bgrid (0:N_R,0:N_THETA,0:N_PHI,3) real(kind=real64), intent(in) :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3)","tags":"","url":"module/file_op.html"},{"title":"datetime_utils – SEP-Stochastic","text":"Uses iso_fortran_env Derived Types type, public :: gregorian_date Components Type Visibility Attributes Name Initial integer, public :: iday integer, public :: iyday integer, public :: iyear integer, public :: month Functions public pure function gregorian (julian) This routine converts Julian day number to calendar (Gregorian) date. Arguments Type Intent Optional Attributes Name integer, intent(in) :: julian Julian day (integer) Return Value type( gregorian_date ) public pure function is_leap_year (year) returns if a function is a Gregorian leap year Arguments Type Intent Optional Attributes Name integer, intent(in) :: year Return Value logical public  function julday (mm, id, iyyy) Arguments Type Intent Optional Attributes Name integer, intent(in) :: mm integer, intent(in) :: id integer, intent(in) :: iyyy Return Value integer public  function modjulianday (year, month, day, fracday) calculate the julian day from day, month, year and fraction of a day Arguments Type Intent Optional Attributes Name integer, intent(in) :: year integer, intent(in) :: month integer, intent(in) :: day real(kind=real64), intent(in) :: fracday Return Value real(kind=real64) public  function seconds_of_year () result(total_seconds) return how many seconds have passed since the year started Arguments None Return Value integer Subroutines public  subroutine caldate (jday, iyear, iyday) This routine takes the modified Julian date and\nconverts it to a date and time string. Read more… Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: jday modified Julian day (integer) integer, intent(out) :: iyear year (integer) integer, intent(out) :: iyday year day (integer)","tags":"","url":"module/datetime_utils.html"},{"title":"dxx – SEP-Stochastic","text":"Uses param iso_fortran_env epv dmumu Functions public  function get_rlambda () Arguments None Return Value real(kind=real64) public  function get_rlambda0 (e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Return Value real(kind=real64) public  function get_rlambdax () Arguments None Return Value real(kind=real64) public  function get_rlambdax0 (e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Return Value real(kind=real64) public  function get_rlambday0 (e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 Return Value real(kind=real64) Subroutines public  subroutine cofm (r, p, pa, beta, bv, bm, cvtu, gbm, dbbds, b1s, gb1s, g, dg) calculate diffusion coeficients in magnetic field coordinate\nand derivatives of g with respect to r, theta, phi\n2 perpendicular coeficients must equal to the poles Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(in) :: p real(kind=real64), intent(in) :: pa real(kind=real64), intent(in) :: beta real(kind=real64), intent(in) :: bv (3) real(kind=real64), intent(in) :: bm real(kind=real64), intent(in) :: cvtu (3) real(kind=real64), intent(in) :: gbm (3) real(kind=real64), intent(in) :: dbbds real(kind=real64), intent(in) :: b1s real(kind=real64), intent(in) :: gb1s (3) real(kind=real64), intent(out) :: g (3) real(kind=real64), intent(out) :: dg (3) public  subroutine preparedxx (ndxx) Arguments Type Intent Optional Attributes Name integer, intent(in) :: ndxx public  subroutine read_dxx (ndxx) Arguments Type Intent Optional Attributes Name integer, intent(in) :: ndxx public  subroutine set_rlambda (e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0 public  subroutine set_rlambdax (e0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e0","tags":"","url":"module/dxx.html"},{"title":"loadptcl – SEP-Stochastic","text":"Uses file_op iso_fortran_env Subroutines public  subroutine prepareptcl (tf, rf, ef, rmuf, np, nf) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out), allocatable :: tf (:) real(kind=real64), intent(out), allocatable :: rf (:,:) real(kind=real64), intent(out), allocatable :: ef (:) real(kind=real64), intent(out), allocatable :: rmuf (:) integer :: np integer :: nf","tags":"","url":"module/loadptcl.html"},{"title":"param – SEP-Stochastic","text":"Uses iso_fortran_env Variables Type Visibility Attributes Name Initial real(kind=real64), public, parameter :: CSPEED = 25.8441774d0 speed of light in R_sun/min\nproton charge-to-mass ratio in coulomb/kg\nproton rest energy in GeV\nelectron rest energy in GeV\nheat capacity ratio real(kind=real64), public, parameter :: DEG_TO_RAD = pi/180d0 real(kind=real64), public, parameter :: EE = 0.510998918d-3 speed of light in R_sun/min\nproton charge-to-mass ratio in coulomb/kg\nproton rest energy in GeV\nelectron rest energy in GeV\nheat capacity ratio real(kind=real64), public, parameter :: EP = 0.938d0 speed of light in R_sun/min\nproton charge-to-mass ratio in coulomb/kg\nproton rest energy in GeV\nelectron rest energy in GeV\nheat capacity ratio real(kind=real64), public, parameter :: GAMMA_CS = 1.6666666666666666666d0 speed of light in R_sun/min\nproton charge-to-mass ratio in coulomb/kg\nproton rest energy in GeV\nelectron rest energy in GeV\nheat capacity ratio integer(kind=int64), public, parameter :: NBASE = 40 integer, public, parameter :: NFMAX = 200 integer, public, parameter :: NSEEDMAX = 2001 integer(kind=int64), public, parameter :: NSPMAX = 20 integer, public, parameter :: N_PHI = 360 grid size integer, public, parameter :: N_R = 150 grid size integer, public, parameter :: N_THETA = 180 grid size real(kind=real64), public, parameter :: PI = 3.14159265358979323846d0 real(kind=real64), public, parameter :: QoMSI = 9.57883376d7 speed of light in R_sun/min\nproton charge-to-mass ratio in coulomb/kg\nproton rest energy in GeV\nelectron rest energy in GeV\nheat capacity ratio real(kind=real64), public, parameter :: RAD_TO_DEG = 180d0/pi real(kind=real64), public, parameter :: RSS = 2.5d0 source surface in units of Rsun real(kind=real64), public, parameter :: RS_PER_MIN_TO_KM_PER_SEC = 6.96340d5/60.0 real(kind=real64), public, parameter :: TWOPI = 2.d0*PI real(kind=real64), public :: b1rsgrid (0:N_R,0:N_THETA,0:N_PHI) mapping to solar surface real(kind=real64), public :: bgrid (0:N_R,0:N_THETA,0:N_PHI,3) magnetic field at grid points real(kind=real64), public, parameter :: epsilon (4) = [0.04, 0.01, 0.04, 0.003] real(kind=real64), public :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3) grad B","tags":"","url":"module/param.html"},{"title":"fb – SEP-Stochastic","text":"Uses param ieee_arithmetic iso_fortran_env Variables Type Visibility Attributes Name Initial real(kind=real64), public, parameter :: OMGE1 = 1055307413 real(kind=real64), public, parameter :: OMGP1 = 574745 Functions public  function fb0 (torg, rpb) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: torg real(kind=real64), intent(in) :: rpb (5) Return Value real(kind=real64) public  function fs0 (tacc, xpk, bm, u1, densw, ob, amach, rsh, vth, pinj, pc) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: tacc real(kind=real64), intent(in) :: xpk (6) real(kind=real64), intent(in) :: bm real(kind=real64), intent(in) :: u1 real(kind=real64), intent(in) :: densw real(kind=real64), intent(in) :: ob real(kind=real64), intent(in) :: amach real(kind=real64), intent(in) :: rsh real(kind=real64), intent(in) :: vth real(kind=real64), intent(inout) :: pinj real(kind=real64), intent(inout) :: pc Return Value real(kind=real64) Subroutines public  subroutine preparefb () Arguments None","tags":"","url":"module/fb.html"},{"title":"mtrx – SEP-Stochastic","text":"Uses iso_fortran_env param dxx dmumu file_op epv Functions public  function cartesian2spherical (x) result(r) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x (3) Return Value real(kind=real64), (3) public  function dmrtx (sintheta, costheta, sinphi, cosphi, dtheta, dphi) calculate martix from polar spheric to xyz coordinates Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: sintheta real(kind=real64), intent(in) :: costheta real(kind=real64), intent(in) :: sinphi real(kind=real64), intent(in) :: cosphi real(kind=real64), intent(in) :: dtheta real(kind=real64), intent(in) :: dphi Return Value real(kind=real64), (3,3) public  function dmxptr (gm, dgm) calculate matrix for xyz' ellipsoid coordinate Kwon to spheric Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: gm real(kind=real64), intent(in) :: dgm Return Value real(kind=real64), (3,3) public  function mbtr (uax1, uax2, uax3) result(b2r) calculate martix from magnetic to polar spheric coordinates Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: uax1 (3) real(kind=real64), intent(in) :: uax2 (3) real(kind=real64), intent(in) :: uax3 (3) Return Value real(kind=real64), (3,3) public  function mrtx (sintheta, costheta, sinphi, cosphi) calculate martix from polar spheric to xyz coordinates Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: sintheta real(kind=real64), intent(in) :: costheta real(kind=real64), intent(in) :: sinphi real(kind=real64), intent(in) :: cosphi Return Value real(kind=real64), (3,3) public  function mxptr (gm) result(xptr) calculate matrix for xyz' ellipsoid coordinate Kwon to spheric Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: gm Return Value real(kind=real64), (3,3) public  function norm2 (arr) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: arr (:) Return Value real(kind=real64) public  function spherical2cartesian (r) result(x) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) Return Value real(kind=real64), (3) public  function trilinear (phic, x) result(phi) trilinear interpolation Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: phic (2,2,2) the value of phi at the corner of cubic box of side 1 real(kind=real64), intent(in) :: x (3) location inside the cube (0<=x<=1) or outside x<0 x>1 Return Value real(kind=real64) interpolated phi public  function trilineardif (phic, x) result(dphi) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: phic (2,2,2) phic the value of phi at the corner of cubic box of side 1 real(kind=real64), intent(in) :: x (3) location inside the cube (0<=x<=1) or outside x<0 x>1 Return Value real(kind=real64), (3) dphi(1)=dphi/dx, dphi(2)=dphi/dy, dphi(3)=dphi/dz","tags":"","url":"module/mtrx.html"},{"title":"random – SEP-Stochastic","text":"Uses iso_fortran_env Functions public impure function gasdev (idum) This function uses Box-Muller transform to generate two normally\ndistributed random numbers at a time Arguments Type Intent Optional Attributes Name integer, intent(inout) :: idum Return Value real(kind=real64) public  function ran2 (idum) Arguments Type Intent Optional Attributes Name integer, intent(inout) :: idum Return Value real(kind=real64)","tags":"","url":"module/random.html"},{"title":"cme_cross – SEP-Stochastic","text":"Uses iso_fortran_env param sim3d_utils datetime_utils file_op mtrx Functions public  function locate (xx, n, x) result(j) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: xx (n) integer, intent(in) :: n real(kind=real64), intent(in) :: x Return Value integer Subroutines public  subroutine inorout (tsh, x, dnsk, vsk, vnx) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: tsh real(kind=real64), intent(in) :: x (6) real(kind=real64), intent(inout) :: dnsk real(kind=real64), intent(out) :: vsk real(kind=real64), intent(out) :: vnx (3) public  subroutine preparecme () read in parameters for CME shock ellipsoid in Kwon's model Read more… Arguments None","tags":"","url":"module/cme_cross.html"},{"title":"sim3d_utils – SEP-Stochastic","text":"Uses iso_fortran_env epv param fb mtrx Functions public  function compress (amach, smach, ob) result(rsh) use bisection to search for root of shock adiabatic equation\ncalculate shock compression ratio of oblique MHD shock Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: amach real(kind=real64), intent(in) :: smach real(kind=real64), intent(in) :: ob Return Value real(kind=real64), (3) public  function solarwind1 (r) result(vpl) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) Return Value real(kind=real64), (3) public  function solarwindtemp (r) result(temp) Solar wind temperature at position vector r Read more… Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) Return Value real(kind=real64) Subroutines public  subroutine drvbmag (r1, b, bmag, cvtu, gbmag, bxgb2, dbbds, pol, b1rs, gb1rs) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r1 (3) real(kind=real64), intent(out) :: b (3) real(kind=real64), intent(out) :: bmag real(kind=real64), intent(out) :: cvtu (3) real(kind=real64), intent(out) :: gbmag (3) real(kind=real64), intent(out) :: bxgb2 (3) real(kind=real64), intent(out) :: dbbds real(kind=real64), intent(out) :: pol real(kind=real64), intent(out) :: b1rs real(kind=real64), intent(out) :: gb1rs (3) public  subroutine f0mod (r, pa, f0, df0, ddf0, df0dmu, ddf0dmu2) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(in) :: pa real(kind=real64), intent(out) :: f0 real(kind=real64), intent(out) :: df0 (3) real(kind=real64), intent(out) :: ddf0 (3,3) real(kind=real64), intent(out) :: df0dmu real(kind=real64), intent(out) :: ddf0dmu2 public  subroutine solarwind (r, vpl, gvpl, densw) calculate solar wind velocity in the corotating frame\n  and its gradient\n in spherical coordinate system Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(out) :: vpl (3) real(kind=real64), intent(out) :: gvpl (3,3) real(kind=real64), intent(out) :: densw solar wind density public recursive subroutine split (iseed, rpb, ck, fs, t, nsplvl, dnsk, bv0, flx, dflx, walk3d, nsts) Arguments Type Intent Optional Attributes Name integer, intent(in) :: iseed real(kind=real64), intent(in) :: rpb (5) real(kind=real64), intent(inout) :: ck real(kind=real64), intent(inout) :: fs real(kind=real64), intent(in) :: t integer, intent(inout) :: nsplvl real(kind=real64), intent(inout) :: dnsk real(kind=real64), intent(inout) :: bv0 (3) real(kind=real64), intent(inout) :: flx real(kind=real64), intent(inout) :: dflx real :: walk3d integer, intent(in) :: nsts public  subroutine vfunc (t, xpk, dxpkdt, du, gxw2, gxw3, bv0, densw, vpl, gper, b1s) Velocity function Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: t real(kind=real64), intent(in) :: xpk (6) real(kind=real64), intent(out) :: dxpkdt (6) real(kind=real64) :: du real(kind=real64), intent(out) :: gxw2 (3) real(kind=real64), intent(out) :: gxw3 (3) real(kind=real64), intent(out) :: bv0 (3) real(kind=real64) :: densw real(kind=real64) :: vpl (3) real(kind=real64), intent(out) :: gper real(kind=real64) :: b1s","tags":"","url":"module/sim3d_utils.html"},{"title":"dmumu – SEP-Stochastic","text":"Uses param iso_fortran_env Functions public  function dmumuAH (p, pa, bm, ddu) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: p real(kind=real64), intent(in) :: pa real(kind=real64), intent(in) :: bm real(kind=real64), intent(out) :: ddu Return Value real(kind=real64) public  function dmumuBK (p, pa, v, bm, ddu) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: p real(kind=real64), intent(in) :: pa real(kind=real64), intent(in) :: v real(kind=real64), intent(in) :: bm real(kind=real64), intent(out) :: ddu Return Value real(kind=real64) public  function dmumuDG (v, rmu0, ddmumuDG) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: v real(kind=real64), intent(inout) :: rmu0 real(kind=real64), intent(out) :: ddmumuDG Return Value real(kind=real64) public  function dmumuDG1 (v, rmu, ddmumuDG1) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: v real(kind=real64), intent(inout) :: rmu real(kind=real64), intent(out) :: ddmumuDG1 Return Value real(kind=real64) public pure elemental function sign_my (x) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: x Return Value real(kind=real64) Subroutines public  subroutine cofdu (p, pa, beta, bm, du, ddu, ndmumu) subroutine to calculate pitch angle diffusion coefficient\nand its derivative with respect to pa = cos(). Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: p real(kind=real64), intent(inout) :: pa real(kind=real64), intent(in) :: beta real(kind=real64), intent(in) :: bm real(kind=real64), intent(out) :: du real(kind=real64), intent(out) :: ddu integer, intent(in) :: ndmumu public  subroutine preparedmumu (ndmumu) Arguments Type Intent Optional Attributes Name integer, intent(in) :: ndmumu public  subroutine read_dmumuAH () Arguments None public  subroutine read_dmumuBK () Arguments None public  subroutine read_dmumuDG () Arguments None public  subroutine set_du0AH (du0rt, du0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: du0rt real(kind=real64), intent(inout) :: du0 public  subroutine set_du0BK (du0rt, du0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: du0rt real(kind=real64), intent(inout) :: du0 public  subroutine set_du0DG (du0rt, du0) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: du0rt real(kind=real64), intent(inout) :: du0","tags":"","url":"module/dmumu.html"},{"title":"epv – SEP-Stochastic","text":"Uses param iso_fortran_env Functions public pure function beta2gamma (beta) convert beta (velocity in units of c) to Lorentz factor gamma Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: beta Return Value real(kind=real64) public  function beta2p (beta) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: beta Return Value real(kind=real64) public  function e2beta (e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64) public  function e2gamma (e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64) public  function e2p (e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64) public  function e2v (e) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: e Return Value real(kind=real64) public  function rp2beta (rp) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rp Return Value real(kind=real64) public  function rp2e (rp) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rp Return Value real(kind=real64) public  function rp2v (rp) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rp Return Value real(kind=real64) public  function v2p (v) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: v Return Value real(kind=real64)","tags":"","url":"module/epv.html"},{"title":"histogram – SEP-Stochastic","text":"Uses iso_fortran_env build histogram Variables Type Attributes Name Initial real(kind=real64) :: al (8) real(kind=real64) :: hist (91,46) real(kind=real64) :: hs (91,46) integer :: i integer :: ii integer :: ix integer :: iy integer :: j integer :: jj integer :: jjj real(kind=real64), parameter :: k4ok2 = 12.4242 real(kind=real64), parameter :: k6ok2 = 242.4242 integer :: n integer :: nn integer :: ns integer :: nz real(kind=real64), parameter :: omega = twopi/(27.27*24*60) angular frequency of sun's rotation real(kind=real64) :: phi real(kind=real64) :: ra real(kind=real64), parameter :: rs = 6.96e5 solar radius in km real(kind=real64), parameter :: rss = 2.5 real(kind=real64) :: theta real(kind=real64) :: tpsw real(kind=real64), parameter :: twopi = 2.d0*3.14159265358979323846d0 real(kind=real64), parameter :: vsw = 400.0/rs*60 solar wind speed in Rs/min real(kind=real64) :: xmu","tags":"","url":"program/histogram.html"},{"title":"arriv_time – SEP-Stochastic","text":"Uses iso_fortran_env epv Common Blocks e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz Variables Type Attributes Name Initial real(kind=real64) :: e real(kind=real64) :: v","tags":"","url":"program/arriv_time.html"},{"title":"mapb2s – SEP-Stochastic","text":"Uses iso_fortran_env param rksolvers file_op mtrx Variables Type Attributes Name Initial real(kind=real64), parameter :: RSS = 2.5d0 real(kind=real64) :: b (3) real(kind=real64) :: b1rs (0:N_R,0:N_THETA,0:N_PHI,2) real(kind=real64) :: bmag real(kind=real64) :: bmag0 integer :: chunk real(kind=real64) :: dr real(kind=real64) :: dt real(kind=real64) :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3) integer :: i integer :: j integer :: k integer :: lphi integer :: lr integer :: ltheta real(kind=real64) :: magfieldgrid (0:N_R,0:N_THETA,0:N_PHI,3) integer :: map (0:N_R,0:N_THETA,0:N_PHI) integer :: n integer :: n1 real(kind=real64) :: pol real(kind=real64) :: r (3) real(kind=real64) :: r0 (3) real(kind=real64) :: r1 (3) real(kind=real64) :: rmin (3) real(kind=real64) :: rmin1 (3) real(kind=real64) :: t Functions function magfield (rvec) result(b) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rvec (3) Return Value real(kind=real64), (3) function vfunc (t, r, pol) result(v) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: t real(kind=real64), intent(in) :: r (3) real(kind=real64), intent(in) :: pol Return Value real(kind=real64), (3)","tags":"","url":"program/mapb2s.html"},{"title":"seedgen – SEP-Stochastic","text":"Uses random param datetime_utils file_op Variables Type Attributes Name Initial integer :: i integer :: iran integer :: iseed integer :: j integer :: nran (NSEEDMAX) integer :: seeds_outfileunit","tags":"","url":"program/seedgen.html"},{"title":"combon – SEP-Stochastic","text":"Uses file_op iso_fortran_env Variables Type Attributes Name Initial real(kind=real64) :: b (3) real(kind=real64) :: b1rs integer :: b1rs_infileunit real(kind=real64) :: gb (3) integer :: i integer :: j integer :: k integer :: maggrid_infileunit integer :: maggrid_outfileunit","tags":"","url":"program/combon.html"},{"title":"average – SEP-Stochastic","text":"Uses ieee_arithmetic iso_fortran_env Variables Type Attributes Name Initial real(kind=real64) :: ar (9) real(kind=real64) :: fl real(kind=real64) :: fl2 integer :: i integer :: na real(kind=real64) :: t","tags":"","url":"program/average.html"},{"title":"shockfront – SEP-Stochastic","text":"Uses random iso_fortran_env file_op loadptcl param sim3d_utils datetime_utils dxx dmumu mtrx fb epv cme_cross ! force nodes = 1\n SHARED(cvgrid) Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) sim3d_em (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir preparefb (subroutine) f0mod (subroutine) walk3d (subroutine) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 read_param (subroutine) get_rlambda0 (function) set_rlambda (subroutine) vfunc (subroutine) sim3d (program) \">\n           common /ndmumu/ Type Attributes Name Initial integer :: ndmumu read_param (subroutine) split (subroutine) walk3d (subroutine) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt read_param (subroutine) get_rlambdax (function) cofm (subroutine) set_rlambdax (subroutine) sim3d (program) \">\n           common /ndxx/ Type Attributes Name Initial integer :: ndxx sim3d_em (program) sim3d (program) \">\n           common /npmax/ Type Attributes Name Initial integer :: npmax sim3d_em (program) sim3d (program) \">\n           common /nsucmin/ Type Attributes Name Initial integer :: nsucmin fl_open (subroutine) sim3d_em (program) sim3d (program) \">\n           common /rankstr/ Type Attributes Name Initial character(len=2) :: rankstr e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) split (subroutine) sim3d_em (program) sim3d (program) \">\n           common /svsp/ Type Attributes Name Initial real(kind=real64) :: cksv (2**(NSPMAX+1)) integer :: nodr (NSPMAX) real(kind=real64) :: rpbsv (5,2**(NSPMAX+1)) real(kind=real64) :: t0sv (2**(NSPMAX+1)) prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te Variables Type Attributes Name Initial integer, parameter :: NM1 = 16 integer, parameter :: NMXID = 40 real(kind=real64) :: ap real(kind=real64) :: b1au real(kind=real64) :: b1s real(kind=real64) :: bm real(kind=real64) :: bv0 (3) real(kind=real64) :: bxgb2 (3) integer :: chunk real(kind=real64) :: ck real(kind=real64) :: cvtu (3) real(kind=real64) :: dbbds real(kind=real64) :: ddf0 (3,3) real(kind=real64) :: ddf0dmu2 real(kind=real64) :: deltat real(kind=real64) :: densw0 real(kind=real64) :: df0 (3) real(kind=real64) :: df0dmu real(kind=real64) :: dflux real(kind=real64) :: dflx real(kind=real64) :: dmapjul real(kind=real64) :: dnsk0 real(kind=real64) :: doy real(kind=real64) :: e0 real(kind=real64), allocatable :: ef (:) real(kind=real64) :: f1 real(kind=real64) :: facip real(kind=real64) :: fb_ real(kind=real64) :: flux real(kind=real64) :: flx real(kind=real64) :: fs real(kind=real64) :: gb1s (3) real(kind=real64) :: gbmag (3) real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: hb integer :: i integer :: id integer :: iseed integer :: itjul integer :: iyday integer :: iyear integer :: j real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 integer :: lsp integer :: n1 integer :: ndpdt integer :: nf integer :: nfbconst integer :: nfl integer :: nodes integer :: np integer :: npp integer :: ns integer, allocatable :: nseeds (:) integer :: nsplvl integer :: nsts integer :: num (3) real(kind=real64) :: omega real(kind=real64) :: pa0 real(kind=real64) :: pab real(kind=real64) :: pol real(kind=real64) :: r0 (3) real(kind=real64) :: rate real(kind=real64) :: rb (3) real(kind=real64) :: rb0 real(kind=real64) :: rdf real(kind=real64), allocatable :: rf (:,:) real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64), allocatable :: rmuf (:) real(kind=real64) :: rnm real(kind=real64) :: rnz real(kind=real64) :: rp0 (5) real(kind=real64) :: rp0org (5) real(kind=real64) :: rpb (5) real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: t real(kind=real64) :: t0 real(kind=real64) :: t0org real(kind=real64) :: tb real(kind=real64) :: tc real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te real(kind=real64), allocatable :: tf (:) real(kind=real64) :: tl real(kind=real64) :: tmodel0 real(kind=real64) :: tnp real(kind=real64) :: tod real(kind=real64) :: treal real(kind=real64) :: trgtfs (4) real(kind=real64) :: tsp real(kind=real64) :: vnr (3) real(kind=real64) :: vnx (3) real(kind=real64) :: vom real(kind=real64) :: vsk real(kind=real64) :: vsw character(len=*), parameter :: writefmt = \"(i1,i3,8(1pe13.5),i3)\" real(kind=real64) :: x0 (6) Subroutines subroutine sksurface (tsh, x, n) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: tsh real(kind=real64), intent(out) :: x (6) integer, intent(in) :: n subroutine walk3d (iseed, rp0, rpb, ck, fs, t0, t, tsp, ns, dnsk0, bv0, nsplvl) random walk of energetic particles in magnetic\nvariables: t, xp(5)\n- x - spatial coordinators\n- p - momentum\n- pa - pitch angle Arguments Type Intent Optional Attributes Name integer :: iseed real(kind=real64) :: rp0 (5) real(kind=real64) :: rpb (5) real(kind=real64) :: ck real(kind=real64) :: fs real(kind=real64) :: t0 real(kind=real64) :: t real(kind=real64) :: tsp integer :: ns real(kind=real64) :: dnsk0 real(kind=real64) :: bv0 (3) integer :: nsplvl","tags":"","url":"program/shockfront.html"},{"title":"sim3d_em – SEP-Stochastic","text":"Uses random iso_fortran_env epv file_op loadptcl param sim3d_utils dxx dmumu mtrx fb datetime_utils cme_cross Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) walk3d (subroutine) sim3d (program) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir preparefb (subroutine) f0mod (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) walk3d (subroutine) sim3d (program) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 common /ldptcl/ Type Attributes Name Initial real(kind=real64) :: ef (NFMAX) integer :: nf integer :: np real(kind=real64) :: rf (3,NFMAX) real(kind=real64) :: rmuf (NFMAX) real(kind=real64) :: tf (NFMAX) read_param (subroutine) split (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) walk3d (subroutine) sim3d (program) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt shockfront (program) sim3d (program) \">\n           common /npmax/ Type Attributes Name Initial integer :: npmax shockfront (program) sim3d (program) \">\n           common /nsucmin/ Type Attributes Name Initial integer :: nsucmin fl_open (subroutine) shockfront (program) sim3d (program) \">\n           common /rankstr/ Type Attributes Name Initial character(len=2) :: rankstr walk3d (subroutine) \">\n           common /seed/ Type Attributes Name Initial integer :: nseeds (nseedmax) e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) walk3d (subroutine) sim3d (program) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) walk3d (subroutine) sim3d (program) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) split (subroutine) shockfront (program) sim3d (program) \">\n           common /svsp/ Type Attributes Name Initial real(kind=real64) :: cksv (2**(NSPMAX+1)) integer :: nodr (NSPMAX) real(kind=real64) :: rpbsv (5,2**(NSPMAX+1)) real(kind=real64) :: t0sv (2**(NSPMAX+1)) prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) walk3d (subroutine) sim3d (program) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te Variables Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: b1au real(kind=real64) :: b1s real(kind=real64) :: bm real(kind=real64) :: bv0 (3) real(kind=real64) :: bxgb2 (3) integer :: chunk real(kind=real64) :: ck real(kind=real64) :: cvtu (3) real(kind=real64) :: dbbds real(kind=real64) :: ddf0 (3,3) real(kind=real64) :: ddf0dmu2 real(kind=real64) :: deltat real(kind=real64) :: densw0 real(kind=real64) :: df0 (3) real(kind=real64) :: df0dmu real(kind=real64) :: dflx real(kind=real64) :: dino real(kind=real64) :: dmapjul real(kind=real64) :: dnsk real(kind=real64) :: doy real(kind=real64) :: e0 real(kind=real64) :: facip real(kind=real64) :: fb_ real(kind=real64) :: flx real(kind=real64) :: fs real(kind=real64) :: gb1s (3) real(kind=real64) :: gbmag (3) real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: hb integer :: i integer :: id integer :: ino integer :: ino0 integer :: iseed integer :: itjul integer :: iyday integer :: iyear real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: lsp integer :: n1 integer :: ndpdt integer :: nfbconst integer :: nfl integer :: nodes integer :: npp integer :: ns integer :: nseeds (nseedmax) integer :: nsplvl integer :: nsts integer :: num (3) real(kind=real64) :: omega real(kind=real64) :: pa0 real(kind=real64) :: pab real(kind=real64) :: pol real(kind=real64) :: r0 (3) real(kind=real64) :: rate real(kind=real64) :: rb (3) real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: rnm real(kind=real64) :: rnz real(kind=real64) :: rp0 (5) real(kind=real64) :: rpb (5) real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: t real(kind=real64) :: t0 real(kind=real64) :: t0org real(kind=real64) :: tb real(kind=real64) :: tc real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te real(kind=real64) :: tl real(kind=real64) :: tmodel0 real(kind=real64) :: tnp real(kind=real64) :: tod real(kind=real64) :: treal real(kind=real64) :: trgtfs (4) real(kind=real64) :: tsp real(kind=real64) :: vnx (3) real(kind=real64) :: vom real(kind=real64) :: vsk real(kind=real64) :: vsw character(len=*), parameter :: writefmt = \"(e15.7,7(1pe13.5),i3,i3,i3)\" real(kind=real64) :: x0 (6) Subroutines subroutine walk3d (iseed, rp0, rpb, ck, fs, t0, t, tsp, ns, ino, bv0, nsplvl) Arguments Type Intent Optional Attributes Name integer :: iseed real(kind=real64) :: rp0 (5) real(kind=real64) :: rpb (5) real(kind=real64) :: ck real(kind=real64) :: fs real(kind=real64) :: t0 real(kind=real64) :: t real(kind=real64) :: tsp integer :: ns integer :: ino real(kind=real64) :: bv0 (3) integer :: nsplvl","tags":"","url":"program/sim3d_em.html"},{"title":"sim3d – SEP-Stochastic","text":"Uses random iso_fortran_env epv file_op loadptcl param sim3d_utils dxx dmumu mtrx fb datetime_utils cme_cross $OMP& SHARED(cvgrid) Common Blocks read_param (subroutine) cofm (subroutine) solarwind1 (function) f0mod (subroutine) split (subroutine) vfunc (subroutine) solarwind (subroutine) drvbmag (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) \">\n           common /bpark/ Type Attributes Name Initial real(kind=real64) :: b1au real(kind=real64) :: densw0 real(kind=real64) :: facip real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 real(kind=real64) :: omega real(kind=real64) :: vom real(kind=real64) :: vsw read_dmumuDG (subroutine) read_dmumuAH (subroutine) read_dmumuBK (subroutine) preparefb (subroutine) read_param (subroutine) read_dxx (subroutine) prepareptcl (subroutine) preparecme (subroutine) shockfront (program) sim3d_em (program) \">\n           common /dir/ Type Attributes Name Initial character(len=256) :: dir preparefb (subroutine) f0mod (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) \">\n           common /fbcnst/ Type Attributes Name Initial real(kind=real64) :: deltat integer :: nfbconst real(kind=real64) :: rb0 real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64) :: tc real(kind=real64) :: tl real(kind=real64) :: tmodel0 read_param (subroutine) get_rlambda0 (function) set_rlambda (subroutine) vfunc (subroutine) shockfront (program) \">\n           common /ndmumu/ Type Attributes Name Initial integer :: ndmumu read_param (subroutine) split (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) \">\n           common /ndpdt/ Type Attributes Name Initial integer :: ndpdt read_param (subroutine) get_rlambdax (function) cofm (subroutine) set_rlambdax (subroutine) shockfront (program) \">\n           common /ndxx/ Type Attributes Name Initial integer :: ndxx shockfront (program) sim3d_em (program) \">\n           common /npmax/ Type Attributes Name Initial integer :: npmax shockfront (program) sim3d_em (program) \">\n           common /nsucmin/ Type Attributes Name Initial integer :: nsucmin fl_open (subroutine) shockfront (program) sim3d_em (program) \">\n           common /rankstr/ Type Attributes Name Initial character(len=2) :: rankstr e2p (function) rp2e (function) rp2beta (function) beta2p (function) fs0 (function) prepareptcl (subroutine) vfunc (subroutine) arriv_time (program) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) \">\n           common /specie/ Type Attributes Name Initial real(kind=real64) :: rnm real(kind=real64) :: rnz preparefb (subroutine) prepareptcl (subroutine) f0mod (subroutine) split (subroutine) vfunc (subroutine) walk3d (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) \">\n           common /srcmod/ Type Attributes Name Initial real(kind=real64) :: ap real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: trgtfs (4) split (subroutine) shockfront (program) sim3d_em (program) \">\n           common /svsp/ Type Attributes Name Initial real(kind=real64) :: cksv (2**(NSPMAX+1)) integer :: nodr (NSPMAX) real(kind=real64) :: rpbsv (5,2**(NSPMAX+1)) real(kind=real64) :: t0sv (2**(NSPMAX+1)) prepareptcl (subroutine) split (subroutine) preparecme (subroutine) inorout (subroutine) walk3d (subroutine) sksurface (subroutine) shockfront (program) walk3d (subroutine) sim3d_em (program) walk3d (subroutine) \">\n           common /tmprm/ Type Attributes Name Initial real(kind=real64) :: dmapjul real(kind=real64) :: t0org real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te preparecme (subroutine) inorout (subroutine) sksurface (subroutine) \">\n           common /vsksw/ Type Attributes Name Initial real(kind=real64) :: tauc1_0 real(kind=real64) :: tauc2 real(kind=real64) :: tauc2_0 real(kind=real64) :: tauf real(kind=real64) :: vcme0 real :: vcme0kmPs real(kind=real64) :: vsksw Variables Type Attributes Name Initial integer, parameter :: NM1 = 16 integer, parameter :: NMXID = 40 real(kind=real64) :: ap real(kind=real64) :: b1au real(kind=real64) :: b1s real(kind=real64) :: bm real(kind=real64) :: bv0 (3) real(kind=real64) :: bxgb2 (3) integer :: chunk real(kind=real64) :: ck real(kind=real64) :: cvtu (3) real(kind=real64) :: dbbds real(kind=real64) :: ddf0 (3,3) real(kind=real64) :: ddf0dmu2 real(kind=real64) :: deltat real(kind=real64) :: densw0 real(kind=real64) :: df0 (3) real(kind=real64) :: df0dmu real(kind=real64) :: dflux real(kind=real64) :: dflx real(kind=real64) :: dmapjul real(kind=real64) :: dnsk0 real(kind=real64) :: dnsk00 real(kind=real64) :: doy real(kind=real64) :: e0 real(kind=real64), allocatable :: ef (:) real(kind=real64) :: f1 real(kind=real64) :: facip real(kind=real64) :: fb_ real(kind=real64) :: flux real(kind=real64) :: flx real(kind=real64) :: fs real(kind=real64) :: gb1s (3) real(kind=real64) :: gbmag (3) real(kind=real64) :: gp real(kind=real64) :: h0 real(kind=real64) :: hb integer :: i integer :: id integer :: iseed integer :: itjul integer :: iyday integer :: iyear integer :: j real(kind=real64) :: k4ok2 real(kind=real64) :: k6ok2 integer :: lsp integer :: ndpdt integer :: nf integer :: nfbconst integer :: nfl integer :: nodes integer :: np integer :: npp integer :: ns integer, allocatable :: nseeds (:) integer :: nsplvl integer :: nsts integer :: num (3) real(kind=real64) :: omega real(kind=real64) :: pa0 real(kind=real64) :: pab real(kind=real64) :: pol real(kind=real64) :: r0 (3) real(kind=real64) :: rate real(kind=real64) :: rb (3) real(kind=real64) :: rb0 real(kind=real64) :: rdf real(kind=real64), allocatable :: rf (:,:) real(kind=real64) :: rk real(kind=real64) :: rmax real(kind=real64), allocatable :: rmuf (:) real(kind=real64) :: rnm real(kind=real64) :: rnz real(kind=real64) :: rp0 (5) real(kind=real64) :: rpb (5) real(kind=real64) :: scanw real(kind=real64) :: sp real(kind=real64) :: sp0 real(kind=real64) :: t real(kind=real64) :: t0 real(kind=real64) :: t0org real(kind=real64) :: tb real(kind=real64) :: tc real(kind=real64) :: tcme0 real(kind=real64) :: tdl real(kind=real64) :: te real(kind=real64), allocatable :: tf (:) real(kind=real64) :: tl real(kind=real64) :: tmodel0 real(kind=real64) :: tnp real(kind=real64) :: tod real(kind=real64) :: treal real(kind=real64) :: trgtfs (4) real(kind=real64) :: tsp real(kind=real64) :: vcme0kmPs real(kind=real64) :: vnx (3) real(kind=real64) :: vom real(kind=real64) :: vsk real(kind=real64) :: vsw character(len=*), parameter :: writefmt = \"(i1,i3,8(1pe13.5),i3)\" real(kind=real64) :: x0 (6) Subroutines subroutine walk3d (iseed, rp0, rpb, ck, fs, t0, t, tsp, ns, dnsk0, bv0, nsplvl) Arguments Type Intent Optional Attributes Name integer, intent(inout) :: iseed real(kind=real64), intent(in) :: rp0 (5) real(kind=real64), intent(out) :: rpb (5) real(kind=real64), intent(inout) :: ck real(kind=real64), intent(inout) :: fs real(kind=real64), intent(in) :: t0 real(kind=real64), intent(out) :: t real(kind=real64), intent(in) :: tsp integer, intent(out) :: ns real(kind=real64), intent(inout) :: dnsk0 real(kind=real64), intent(inout) :: bv0 (3) integer, intent(in) :: nsplvl","tags":"","url":"program/sim3d.html"},{"title":"maggrid – SEP-Stochastic","text":"Uses iso_fortran_env param file_op fgsl mtrx Variables Type Attributes Name Initial real(kind=real64), dimension(0:N_THETA, 0:NS, 0:NS) :: ALP_TABLE Vector of lower-triangular matrices, where each matrix is of the form \\begin{bmatrix}\nP_0&#94;0    & \\cdot    & \\cdot    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\nP_1&#94;0    & P_1&#94;1    & \\cdot    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\nP_2&#94;0    & P_2&#94;1    & P_2&#94;2    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\n\\vdots   & \\vdots   & \\vdots   & \\ddots & \\vdots      & \\vdots      & \\vdots \\\\\nP_{38}&#94;0 & P_{38}&#94;1 & P_{38}&#94;2 & \\cdots & P_{38}&#94;{38} & \\cdot       & \\cdot  \\\\\nP_{39}&#94;0 & P_{39}&#94;1 & P_{39}&#94;2 & \\cdots & P_{39}&#94;{38} & P_{39}&#94;{39} & \\cdot  \\\\\nP_{40}&#94;0 & P_{40}&#94;1 & P_{40}&#94;2 & \\cdots & P_{40}&#94;{38} & P_{40}&#94;{39} & P_{40}&#94;{40}\n\\end{bmatrix} where each P_ℓ&#94;m is a matrix evaluated at an x given by the vector's\nindex, and each ⋅ signifies a zero entry in the matrix.\n DALP_TABLE is the first derivative\n D2ALP_TABLE is the second derivative real(kind=real64), dimension(0:N_THETA, 0:NS, 0:NS) :: D2ALP_TABLE Vector of lower-triangular matrices, where each matrix is of the form \\begin{bmatrix}\nP_0&#94;0    & \\cdot    & \\cdot    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\nP_1&#94;0    & P_1&#94;1    & \\cdot    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\nP_2&#94;0    & P_2&#94;1    & P_2&#94;2    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\n\\vdots   & \\vdots   & \\vdots   & \\ddots & \\vdots      & \\vdots      & \\vdots \\\\\nP_{38}&#94;0 & P_{38}&#94;1 & P_{38}&#94;2 & \\cdots & P_{38}&#94;{38} & \\cdot       & \\cdot  \\\\\nP_{39}&#94;0 & P_{39}&#94;1 & P_{39}&#94;2 & \\cdots & P_{39}&#94;{38} & P_{39}&#94;{39} & \\cdot  \\\\\nP_{40}&#94;0 & P_{40}&#94;1 & P_{40}&#94;2 & \\cdots & P_{40}&#94;{38} & P_{40}&#94;{39} & P_{40}&#94;{40}\n\\end{bmatrix} where each P_ℓ&#94;m is a matrix evaluated at an x given by the vector's\nindex, and each ⋅ signifies a zero entry in the matrix.\n DALP_TABLE is the first derivative\n D2ALP_TABLE is the second derivative real(kind=real64), dimension(0:N_THETA, 0:NS, 0:NS) :: DALP_TABLE Vector of lower-triangular matrices, where each matrix is of the form \\begin{bmatrix}\nP_0&#94;0    & \\cdot    & \\cdot    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\nP_1&#94;0    & P_1&#94;1    & \\cdot    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\nP_2&#94;0    & P_2&#94;1    & P_2&#94;2    & \\cdots & \\cdot       & \\cdot       & \\cdot  \\\\\n\\vdots   & \\vdots   & \\vdots   & \\ddots & \\vdots      & \\vdots      & \\vdots \\\\\nP_{38}&#94;0 & P_{38}&#94;1 & P_{38}&#94;2 & \\cdots & P_{38}&#94;{38} & \\cdot       & \\cdot  \\\\\nP_{39}&#94;0 & P_{39}&#94;1 & P_{39}&#94;2 & \\cdots & P_{39}&#94;{38} & P_{39}&#94;{39} & \\cdot  \\\\\nP_{40}&#94;0 & P_{40}&#94;1 & P_{40}&#94;2 & \\cdots & P_{40}&#94;{38} & P_{40}&#94;{39} & P_{40}&#94;{40}\n\\end{bmatrix} where each P_ℓ&#94;m is a matrix evaluated at an x given by the vector's\nindex, and each ⋅ signifies a zero entry in the matrix.\n DALP_TABLE is the first derivative\n D2ALP_TABLE is the second derivative integer, parameter :: NS = 40 real(kind=real64) :: b (3) real(kind=real64) :: bgrid (0:N_R,0:N_THETA,0:N_PHI,3) real(kind=real64) :: bmag integer :: chunk real(kind=real64) :: cvtu (3) real(kind=real64) :: dbbds real(kind=real64) :: g (0:NS,0:NS) real(kind=real64) :: gbgrid (0:N_R,0:N_THETA,0:N_PHI,3) real(kind=real64) :: gbmag (3) real(kind=real64) :: h (0:NS,0:NS) integer :: i integer :: id integer :: j integer :: k real(kind=real64) :: rvec (3) real(kind=real64) :: srfctrtl (NS,NS) real(kind=real64) :: starttime real(kind=real64) :: stoptime Functions function plgndr (l, m, x) Arguments Type Intent Optional Attributes Name integer, intent(in) :: l integer, intent(in) :: m real(kind=real64), intent(in) :: x Return Value real(kind=real64) Subroutines subroutine factorialratio (fac_table) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: fac_table (NS,NS) subroutine init_aplm (alp_arr, dalp_arr, d2alp_arr) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(out) :: alp_arr (0:N_THETA,0:NS,0:NS) populate alp, dalp, d2alp with the associated legendre polynomials,\nand its first and second derivatives respectively real(kind=real64), intent(out) :: dalp_arr (0:N_THETA,0:NS,0:NS) real(kind=real64), intent(out) :: d2alp_arr (0:N_THETA,0:NS,0:NS) subroutine magfield (rvec, b, bmag, cvtu, gbmag, dbbds, srfctrtl, g, h) Arguments Type Intent Optional Attributes Name real(kind=real64), intent(in) :: rvec (3) real(kind=real64), intent(out) :: b (3) real(kind=real64), intent(out) :: bmag real(kind=real64), intent(out) :: cvtu (3) real(kind=real64), intent(out) :: gbmag (3) real(kind=real64), intent(out) :: dbbds real(kind=real64), intent(in) :: srfctrtl (NS,NS) real(kind=real64), intent(in) :: g (0:NS,0:NS) real(kind=real64), intent(in) :: h (0:NS,0:NS)","tags":"","url":"program/maggrid.html"},{"title":"  input – SEP-Stochastic\n","text":"Variables Name Type Default Description vswSI real(kind=real64) None rsSI real(kind=real64) None bemNT real(kind=real64) None TsunDAY real(kind=real64) None facip real(kind=real64) None","tags":"","url":"namelist/input.html"},{"title":"  io – SEP-Stochastic\n","text":"Variables Name Type Default Description f1n character(len=256) None f2n character(len=256) None","tags":"","url":"namelist/io.html"},{"title":"  dpdt – SEP-Stochastic\n","text":"Variables Name Type Default Description ndpdt integer None","tags":"","url":"namelist/dpdt.html"},{"title":"  dmumu – SEP-Stochastic\n","text":"Variables Name Type Default Description rlambda real(kind=real64) None nlambda integer None ndmumu integer None nlambdaconst integer None","tags":"","url":"namelist/dmumu.html"},{"title":"  dxx – SEP-Stochastic\n","text":"Variables Name Type Default Description rlambdax real(kind=real64) None rlambday real(kind=real64) None ndxx integer None nlambdax integer None","tags":"","url":"namelist/dxx.html"},{"title":"  shkacc – SEP-Stochastic\n","text":"Variables Name Type Default Description ecrmax real(kind=real64) None ecrmin real(kind=real64) None ob0 real(kind=real64) None obw real(kind=real64) None etinj real(kind=real64) None fampb real(kind=real64) None ratkp real(kind=real64) None","tags":"","url":"namelist/shkacc.html"},{"title":"  inputdxx – SEP-Stochastic\n","text":"Variables Name Type Default Description gperCMS real(kind=real64) None bper real(kind=real64) None aper real(kind=real64) None","tags":"","url":"namelist/inputdxx.html"},{"title":"  fb – SEP-Stochastic\n","text":"Variables Name Type Default Description rb0 real(kind=real64) None rmax real(kind=real64) None rk real(kind=real64) None deltat real(kind=real64) None tc real(kind=real64) None tl real(kind=real64) None tmodel0 real(kind=real64) None nfbconst integer None sclat real(kind=real64) None sclong real(kind=real64) None scanw real(kind=real64) None","tags":"","url":"namelist/fb.html"},{"title":"  inputdmumuDG – SEP-Stochastic\n","text":"Variables Name Type Default Description du0 real(kind=real64) None rnu real(kind=real64) None delta real(kind=real64) None va real(kind=real64) None","tags":"","url":"namelist/inputdmumudg.html"},{"title":"  inputdmumuAH – SEP-Stochastic\n","text":"Variables Name Type Default Description du0 real(kind=real64) None b1 real(kind=real64) None a1 real(kind=real64) None","tags":"","url":"namelist/inputdmumuah.html"},{"title":"  inputdmumuBK – SEP-Stochastic\n","text":"Variables Name Type Default Description du0 real(kind=real64) None rlambda real(kind=real64) None nlambda integer None b1 real(kind=real64) None a1 real(kind=real64) None qindx real(kind=real64) None sigma real(kind=real64) None h real(kind=real64) None","tags":"","url":"namelist/inputdmumubk.html"}]}